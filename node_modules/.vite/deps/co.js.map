{
  "version": 3,
  "sources": ["../../co/index.js"],
  "sourcesContent": ["\n/**\n * slice() reference.\n */\n\nvar slice = Array.prototype.slice;\n\n/**\n * Expose `co`.\n */\n\nmodule.exports = co['default'] = co.co = co;\n\n/**\n * Wrap the given generator `fn` into a\n * function that returns a promise.\n * This is a separate function so that\n * every `co()` call doesn't create a new,\n * unnecessary closure.\n *\n * @param {GeneratorFunction} fn\n * @return {Function}\n * @api public\n */\n\nco.wrap = function (fn) {\n  createPromise.__generatorFunction__ = fn;\n  return createPromise;\n  function createPromise() {\n    return co.call(this, fn.apply(this, arguments));\n  }\n};\n\n/**\n * Execute the generator function or a generator\n * and return a promise.\n *\n * @param {Function} fn\n * @return {Promise}\n * @api public\n */\n\nfunction co(gen) {\n  var ctx = this;\n  var args = slice.call(arguments, 1)\n\n  // we wrap everything in a promise to avoid promise chaining,\n  // which leads to memory leak errors.\n  // see https://github.com/tj/co/issues/180\n  return new Promise(function(resolve, reject) {\n    if (typeof gen === 'function') gen = gen.apply(ctx, args);\n    if (!gen || typeof gen.next !== 'function') return resolve(gen);\n\n    onFulfilled();\n\n    /**\n     * @param {Mixed} res\n     * @return {Promise}\n     * @api private\n     */\n\n    function onFulfilled(res) {\n      var ret;\n      try {\n        ret = gen.next(res);\n      } catch (e) {\n        return reject(e);\n      }\n      next(ret);\n    }\n\n    /**\n     * @param {Error} err\n     * @return {Promise}\n     * @api private\n     */\n\n    function onRejected(err) {\n      var ret;\n      try {\n        ret = gen.throw(err);\n      } catch (e) {\n        return reject(e);\n      }\n      next(ret);\n    }\n\n    /**\n     * Get the next value in the generator,\n     * return a promise.\n     *\n     * @param {Object} ret\n     * @return {Promise}\n     * @api private\n     */\n\n    function next(ret) {\n      if (ret.done) return resolve(ret.value);\n      var value = toPromise.call(ctx, ret.value);\n      if (value && isPromise(value)) return value.then(onFulfilled, onRejected);\n      return onRejected(new TypeError('You may only yield a function, promise, generator, array, or object, '\n        + 'but the following object was passed: \"' + String(ret.value) + '\"'));\n    }\n  });\n}\n\n/**\n * Convert a `yield`ed value into a promise.\n *\n * @param {Mixed} obj\n * @return {Promise}\n * @api private\n */\n\nfunction toPromise(obj) {\n  if (!obj) return obj;\n  if (isPromise(obj)) return obj;\n  if (isGeneratorFunction(obj) || isGenerator(obj)) return co.call(this, obj);\n  if ('function' == typeof obj) return thunkToPromise.call(this, obj);\n  if (Array.isArray(obj)) return arrayToPromise.call(this, obj);\n  if (isObject(obj)) return objectToPromise.call(this, obj);\n  return obj;\n}\n\n/**\n * Convert a thunk to a promise.\n *\n * @param {Function}\n * @return {Promise}\n * @api private\n */\n\nfunction thunkToPromise(fn) {\n  var ctx = this;\n  return new Promise(function (resolve, reject) {\n    fn.call(ctx, function (err, res) {\n      if (err) return reject(err);\n      if (arguments.length > 2) res = slice.call(arguments, 1);\n      resolve(res);\n    });\n  });\n}\n\n/**\n * Convert an array of \"yieldables\" to a promise.\n * Uses `Promise.all()` internally.\n *\n * @param {Array} obj\n * @return {Promise}\n * @api private\n */\n\nfunction arrayToPromise(obj) {\n  return Promise.all(obj.map(toPromise, this));\n}\n\n/**\n * Convert an object of \"yieldables\" to a promise.\n * Uses `Promise.all()` internally.\n *\n * @param {Object} obj\n * @return {Promise}\n * @api private\n */\n\nfunction objectToPromise(obj){\n  var results = new obj.constructor();\n  var keys = Object.keys(obj);\n  var promises = [];\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var promise = toPromise.call(this, obj[key]);\n    if (promise && isPromise(promise)) defer(promise, key);\n    else results[key] = obj[key];\n  }\n  return Promise.all(promises).then(function () {\n    return results;\n  });\n\n  function defer(promise, key) {\n    // predefine the key in the result\n    results[key] = undefined;\n    promises.push(promise.then(function (res) {\n      results[key] = res;\n    }));\n  }\n}\n\n/**\n * Check if `obj` is a promise.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isPromise(obj) {\n  return 'function' == typeof obj.then;\n}\n\n/**\n * Check if `obj` is a generator.\n *\n * @param {Mixed} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isGenerator(obj) {\n  return 'function' == typeof obj.next && 'function' == typeof obj.throw;\n}\n\n/**\n * Check if `obj` is a generator function.\n *\n * @param {Mixed} obj\n * @return {Boolean}\n * @api private\n */\nfunction isGeneratorFunction(obj) {\n  var constructor = obj.constructor;\n  if (!constructor) return false;\n  if ('GeneratorFunction' === constructor.name || 'GeneratorFunction' === constructor.displayName) return true;\n  return isGenerator(constructor.prototype);\n}\n\n/**\n * Check for plain object.\n *\n * @param {Mixed} val\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(val) {\n  return Object == val.constructor;\n}\n"],
  "mappings": "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",
  "names": ["promise", "key"]
}
